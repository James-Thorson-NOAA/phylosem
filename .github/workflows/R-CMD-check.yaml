# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, dev, remove-fit_tmb]
  pull_request:
    branches: [main, dev, remove-fit_tmb]

name: R-CMD-check

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          # - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies macOS
        if: runner.os == 'macOS'
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("sf")
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("textshaping")
          install.packages("Matrix", type = "source")
          install.packages("TMB", type = "source")
        shell: Rscript {0}

      - name: Install dependencies Ubuntu
        if: runner.os == 'Linux'
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("knitr")
          remotes::install_cran("rmarkdown")
          remotes::install_cran("rcmdcheck")
          install.packages("Matrix", type = "source")
          install.packages("TMB", type = "source")
        shell: Rscript {0}

      - name: Install dependencies Windows
        if: runner.os == 'Windows'
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("knitr")
          remotes::install_cran("rmarkdown")
          remotes::install_cran("rcmdcheck")
          install.packages("Matrix", type = "source")
          install.packages("TMB", type = "source")
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          args: 'c("--no-manual", "--as-cran", "--ignore-vignettes", "--no-build-vignettes")'
          build_args: 'c("--no-manual", "--no-build-vignettes")'
